<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
    x:Class="BigBrotherViewer.View.MainWindow"
    Title="Observer overview" Loaded="Window_Loaded" WindowStartupLocation="CenterScreen" ResizeMode="CanResizeWithGrip"
    Closing="Window_Closing" WindowState="Normal" Icon="../Crystal_Clear_action_find.ico">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25" />
            <RowDefinition Height="100" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Name="EventInformation" DataContext="{Binding EventView}" Grid.Row="1" HorizontalAlignment="Left"
              Height="95" VerticalAlignment="Top" Width="256" Margin="10 0 0 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="65" />
                <ColumnDefinition Width="200" />
            </Grid.ColumnDefinitions>
            <Label Grid.Row="0" Grid.Column="0" Content="Observer:" />
            <Label Grid.Row="0" Grid.Column="1" Margin="0 0 0 0" Content="{Binding ObserverEvent.FullName}" />
            <Label Grid.Row="1" Grid.Column="0" Content="Event:" />
            <Label Grid.Row="1" Grid.Column="1" Margin="0 0 0 0" Content="{Binding NameEvent}" />
            <Label Grid.Row="2" Grid.Column="0" Content="Star event:" />
            <Label Grid.Row="2" Grid.Column="1" Margin="0 0 0 0" Content="{Binding StarTimeEvent}" />
        </Grid>
        <Grid Name="UsersInformation" HorizontalAlignment="Stretch" Grid.Row="2" VerticalAlignment="Top" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Label Content="User:" Grid.Column="0" />
            <DataGrid x:Name="UsersDataGrid" Grid.Column="0" Margin="0,30,0,0" ItemsSource="{Binding Users}"
                      SelectedItem="{Binding SelectedUser, Mode=TwoWay}" AutoGenerateColumns="False"
                      SelectionMode="Single"
                      SelectionUnit="FullRow" CanUserAddRows="False"
                      CanUserDeleteRows="False">
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Attention}" Value="True">
                                <Setter Property="Background" Value="Red" />
                                <Setter Property="Foreground" Value="White" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Connection}" Value="false">
                                <Setter Property="Background" Value="Red" />
                                <Setter Property="Foreground" Value="White" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn  IsReadOnly="True" Width="15">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Ellipse>
                                    <Ellipse.Style>
                                        <Style TargetType="Ellipse">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Connection, Mode=OneWay}"
                                                             Value="True">
                                                    <Setter Property="Fill"
                                                            Value="Green" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Connection, Mode=OneWay}"
                                                             Value="False">
                                                    <Setter Property="Fill"
                                                            Value="OrangeRed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Ellipse.Style>
                                </Ellipse>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn IsReadOnly="True" Width="15">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image>
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <DataTrigger  Binding="{Binding Attention, Mode=OneWay}" Value="True" >
                                                    <Setter Property="Source" Value="../TriangleExclamation.ico"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="User Name" Binding="{Binding UserName}" IsReadOnly="True" Width="0.15*" />
                    <DataGridTextColumn Header="Pc Name" Binding="{Binding PCName}" IsReadOnly="True" Width="0.15*" />
                    <DataGridTextColumn Header="Work" Binding="{Binding NameWork, Mode=TwoWay}" Width="0.25*"
                                        IsReadOnly="False" />
                    <DataGridTextColumn Header="Timestamp" Binding="{Binding TimeStampDispatch, ConverterCulture=cs-CZ}" IsReadOnly="True"
                                        Width="0.25*" />
                </DataGrid.Columns>
            </DataGrid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="70"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Label Content="User activities:" Grid.Row="1" Margin="10 0 0 0" />
                <DataGrid x:Name="UserActivitiesDataGrid" Grid.Row="1" Margin="10,30,0,0"
                      ItemsSource="{Binding Activities}" AutoGenerateColumns="False" SelectionMode="Single"
                      SelectionUnit="Cell" CanUserAddRows="False" HorizontalAlignment="Stretch"
                      HorizontalContentAlignment="Stretch"
                      CanUserDeleteRows="False">
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MarkRow}" Value="True">
                                    <Setter Property="Background" Value="Red" />
                                    <Setter Property="Foreground" Value="White" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Activity name" Binding="{Binding NameActivity}" Width="0.6*"
                                        IsReadOnly="True" />
                        <DataGridTextColumn Header="Timestamp" Binding="{Binding TimeActivity, ConverterCulture=cs-CZ}" Width="0.3*"
                                        IsReadOnly="True" />
                        <DataGridCheckBoxColumn Header="Ignore"
                                            Binding="{Binding IgnoreAttention, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                            Width="0.1*" />
                    </DataGrid.Columns>
                </DataGrid>
                <Grid Grid.Row="0">
                    <TextBox HorizontalAlignment="Left" Height="23" Margin="10,37,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="129" Text="{Binding FillNameActivity, UpdateSourceTrigger=PropertyChanged}"/>
                    <CheckBox Content="Only attentions" HorizontalAlignment="Left" Margin="144,37,-24,0" VerticalAlignment="Top" Height="23" Width="122" IsChecked="{Binding OnlyAttentions}"/>
                    <Label Content="Filters:"  HorizontalAlignment="Left" Margin="10,6,0,0" VerticalAlignment="Top" Width="129" Height="26"/>
                </Grid>
            </Grid>
        </Grid>

        <Menu HorizontalAlignment="Stretch" Height="25" Grid.Row="0" VerticalAlignment="Top" Margin="10 0 0 0">
            <MenuItem Header="_File">
                <MenuItem Name="CreateEventMenu" Header="_Create event" Click="Add_event_Click" />
                <MenuItem Name="StopEventMenu" Header="_Stop event" Click="Stop_event_Click" />
                <MenuItem Header="_Add attentions" Click="Add_attentions_Click" />
                <MenuItem Header="_Historical events data" Click="Add_Historical_Event_Click" />
                <MenuItem Header="_Exit" Click="Exit_Click" />
            </MenuItem>
        </Menu>
    </Grid>

</Window>